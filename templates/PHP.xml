<templateSet group="PHP">
  <template name="xlog" value="CustomLog::log(__METHOD__, &quot;$CURSOR$&quot;, []);&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xthis" value="$this-&gt;" description="$this-&gt;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xxthis" value="$this-&gt;$clipboard$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="clipboard" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="44" value="$this-&gt;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xroute" value="Route::get('/sam', function(){&#10;    $model = \App\Models\$MODEL$::find($ID$);&#10;    dd($model);&#10;    &#10;});" description="Rota dummy" toReformat="false" toShortenFQNames="true">
    <variable name="MODEL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ID" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xdd" value="dd($CLIPBOARD$);&#10;" description="xdd" toReformat="false" toShortenFQNames="true">
    <variable name="CLIPBOARD" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xforeach" value="foreach ($VAR$ as $key =&gt; $value){&#10;    $CURSOR$&#10;}" description="xforeach" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xphp" value="&lt;?php&#10;$CURSOR$&#10;?&gt;" description="xphp" toReformat="false" toShortenFQNames="true">
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="pwhile" value="$stmt = \Turin\DB::prepare($sql);&#10;$stmt-&gt;bindValue(':termo', $_POST[''], PDO::PARAM_INT);&#10;$stmt-&gt;execute([&#10;        ':'=&gt; $this-&gt;&#10;]);&#10;&#10;&#10;$linha = $stmt-&gt;fetch();&#10;$linhas = $stmt-&gt;fetchAll();&#10;&#10;//foreach ($stmt-&gt;fetchAll() as $linha){&#10;" description="pwhile" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xmigration" value="        Schema::table('$TABELA$', function (Blueprint $table) {&#10;            $table-&gt;unsignedInteger('tipo_servico_id')-&gt;after('boleto_id')-&gt;default(1);&#10;            $table-&gt;index([&quot;tipo_servico_id&quot;]);&#10;            $table-&gt;foreign('tipo_servico_id')&#10;                -&gt;references('id')-&gt;on('tipo_servicos')&#10;                -&gt;onDelete('no action')&#10;                -&gt;onUpdate('no action');&#10;        });" description="xmigration" toReformat="false" toShortenFQNames="true">
    <variable name="TABELA" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xscheme" value="Schema::$TIPO$('users', function (Blueprint $table) {&#10;    $table-&gt;increments('id');&#10;    $table-&gt;string('name');&#10;    $table-&gt;timestamps();&#10;    $table-&gt;softDeletes();&#10;&#10;    $table&#10;        -&gt;unsignedInteger('user_id')&#10;        -&gt;after('address_id')&#10;        -&gt;index();&#10;&#10;    $table&#10;        -&gt;foreign('user_id')&#10;        -&gt;references('id')-&gt;on('users')&#10;        -&gt;onDelete('no action')&#10;        -&gt;onUpdate('no action');&#10;});&#10;    &#10;Schema::table('addresses', function (Blueprint $table) {&#10;    $table-&gt;dropForeign('fk_addresses_companies1_idx');&#10;    $table-&gt;dropColumn('company_id');&#10;});&#10;&#10;$table&#10;        -&gt;after('password', function($table){&#10;            $table-&gt;string('var');&#10;        });&#10;&#10;Artisan::call('db:seed', [&#10;    '--class' =&gt; UsersTableSeeder::class,&#10;    '--force' =&gt; true,&#10;]);&#10;&#10;&#10;&#10;" description="xscheme" toReformat="false" toShortenFQNames="true">
    <variable name="TIPO" expression="" defaultValue="create|table" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pinsert" value="$stmt = DB::prepare(&quot;INSERT INTO eua_balance(eua_financeiro_status_id, eua_currency_id, eua_categoria_id, value, dolar_fechamento, description, dt_pagamento) values (:eua_financeiro_status_id, :eua_currency_id, :eua_categoria_id, :value, :dolar_fechamento, :description, :dt_pagamento)&quot;);&#10;&#10;        $stmt-&gt;bindValue(&quot;:eua_financeiro_status_id&quot;, $data['eua_financeiro_status_id'], PDO::PARAM_INT);&#10;        $stmt-&gt;bindValue(&quot;:eua_currency_id&quot;, $data['eua_currency_id'], PDO::PARAM_INT);&#10;        $stmt-&gt;bindValue(&quot;:eua_categoria_id&quot;, $data['eua_category_id'], PDO::PARAM_INT);&#10;        $stmt-&gt;bindValue(&quot;:value&quot;, $data['valor'], PDO::PARAM_STR);&#10;        $stmt-&gt;bindValue(&quot;:dolar_fechamento&quot;, $data['dolar_fechamento'], PDO::PARAM_STR);&#10;        $stmt-&gt;bindValue(&quot;:description&quot;, $data['descricao'], PDO::PARAM_STR);&#10;        $stmt-&gt;bindValue(&quot;:dt_pagamento&quot;, $data['date'], PDO::PARAM_STR);&#10;&#10;        $stmt-&gt;execute();" description="pinsert" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="rthis" value="return $this;" description="return $this" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xdefine" value="/**&#10;@return $this&#10;*/&#10;public function define$MODEL$($PARAM$)&#10;{&#10;    $this-&gt;$PARAM$ = (new $MODEL$Repository())-&gt;find($PARAM$);&#10;    return $this;&#10;}" description="xdefine" toReformat="false" toShortenFQNames="true">
    <variable name="MODEL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="?=" value="&lt;?php echo $CURSOR$;?&gt;" description="?=" toReformat="false" toShortenFQNames="true">
    <variable name="CURSOR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xcomment" value="/*================================================================================================================*/&#10;/*==================== RELATIONSHIPS =============================================================================*/&#10;/*================================================================================================================*/&#10;" description="xcomment" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xscopes" value="    /*================================================================================================================*/&#10;    /*==================== SCOPES ====================================================================================*/&#10;    /*================================================================================================================*/&#10;" description="xscopes" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xcard" value="&lt;div class=&quot;card&quot;&gt;&#10;    &lt;div class=&quot;card-header&quot;&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;card-body&quot;&gt;&#10;    &lt;/div&gt;&#10;    &lt;div class=&quot;card-footer&quot;&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;" description="xcard" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
      <option name="Vue" value="true" />
    </context>
  </template>
  <template name="xa" value="$a=1;" description="xa" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xtest" value="&lt;?php&#10;&#10;namespace Tests\Feature\App\Jobs\Quotes;&#10;&#10;use App\Services\Enfoque\IntegrationService;&#10;use Illuminate\Foundation\Testing\DatabaseMigrations;&#10;use Illuminate\Foundation\Testing\DatabaseTransactions;&#10;use Illuminate\Support\Collection;&#10;use Tests\TestCase;&#10;use Tests\Traits\TestUsersTrait;&#10;&#10;class ImportThirdPartyQuotesTest extends TestCase&#10;{&#10;    use DatabaseTransactions, TestUsersTrait;&#10;&#10;    protected function setUp(): void&#10;    {&#10;        parent::setUp(); // TODO: Change the autogenerated stub&#10;    }&#10;&#10;    /**&#10;     * @test&#10;     * @dataProvider dataProviderMethod&#10;     */&#10;    //phpcs:ignore&#10;    public function it_has_lalala($data)&#10;    {&#10;        $this-&gt;withoutExceptionHandling();&#10;&#10;        // Given&#10;        // When&#10;        // Then&#10;        $this-&gt;assertTrue($data === 'sd');&#10;    }&#10;&#10;    /**&#10;     * @return array[]&#10;     */&#10;    public function dataProviderMethod()&#10;    {&#10;        return [&#10;            ['sd'],&#10;        ];&#10;    }&#10;}" description="xtest" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xdeclare" value="declare(strict_types=1);" description="xdeclare" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="xmatch" value="$return_value = match ($food) {&#10;    'apple' =&gt; 'This food is an apple',&#10;    'bar' =&gt; 'This food is a bar',&#10;    'cake' =&gt; 'This food is a cake',&#10;};" description="xmatch" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>